Project: Simple To-Do List
Overview
You will create a to-do list where the user can add tasks, mark them as done, filter them, and delete them. This project will help you get hands-on experience with basic JavaScript concepts and DOM manipulation.

Features
Add Task: Users can add new tasks.

Mark as Done: Users can mark tasks as done.

Delete Task: Users can delete tasks.

Filter Tasks: Users can filter tasks by all, completed, or pending.

Save and Load Tasks: Users can save tasks to local storage and load them when revisiting the page.







Steps to Build the Project
HTML Structure: Create the basic HTML structure with an input field for new tasks, a button to add them, a section to list the tasks, and buttons or selectors for the filters.

Adding a Task: Use JavaScript to capture the input value and add it to an array. Loop through the array to display the tasks.

Marking as Done: Add an event listener to the task that allows the user to mark it as done. You can do this by toggling a class that changes its appearance (e.g., strike-through).

Deleting a Task: Add a delete button to each task, and write a function that removes the task from the array and updates the displayed list.

Filtering Tasks: Use a for loop and comparators to filter the tasks based on their status (all, completed, pending). This may involve a nested loop to go through all the tasks and compare their statuses.

Saving and Loading Tasks: Use local storage to save and load tasks. You can use a while loop to iterate through the stored tasks when loading them.

Style with CSS: Add some CSS to make it look nice.